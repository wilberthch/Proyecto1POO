/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Fitness.Fecha;
import Fitness.Medida;
import Fitness.Paciente;
import Fitness.PersistenciaDatos;


import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import javax.swing.table.TableModel;

import javax.xml.bind.JAXBException;


/**
 *
 * @author admin
 */
public class MenuPaciente extends javax.swing.JFrame {

    /**
     * Creates new form MenuPaciente
     */
    public static List<Paciente> pacientes = new ArrayList<>();
    public static int numeroPacientes = 0;
    public static Paciente temp;
    public static int posPaciente = 0;
    public static char gener;
    public static int eda;

    public MenuPaciente() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        crear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        cedula = new javax.swing.JTextField();
        Dia = new javax.swing.JComboBox();
        Mes = new javax.swing.JComboBox();
        Anio = new javax.swing.JComboBox();
        telefono = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        sexo = new javax.swing.JComboBox();
        Guardar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        Medicion = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Salir = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pacientes", "Cedula"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        crear.setText("Crear");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Cedula");

        jLabel3.setText("Telefono");

        jLabel4.setText("Email");

        jLabel5.setText("Sexo");

        jLabel6.setText("Fecha de nacimiento");

        nombre.setNextFocusableComponent(cedula);
        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaActionPerformed(evt);
            }
        });

        Dia.setMaximumRowCount(31);
        Dia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        Dia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiaActionPerformed(evt);
            }
        });

        Mes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre" }));
        Mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MesActionPerformed(evt);
            }
        });

        Anio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915" }));
        Anio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnioActionPerformed(evt);
            }
        });

        telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefonoActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        sexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Hombre", "Mujer" }));
        sexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexoActionPerformed(evt);
            }
        });

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        Medicion.setText("Medicion");
        Medicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicionActionPerformed(evt);
            }
        });

        jButton2.setText("Programa de entrenamiento");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(0, 105, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(crear)
                                .addGap(32, 32, 32)
                                .addComponent(Guardar)
                                .addGap(18, 18, 18)
                                .addComponent(borrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Salir))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Medicion, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Medicion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(crear)
                            .addComponent(Guardar)
                            .addComponent(borrar)
                            .addComponent(Salir))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearActionPerformed
        String pNombre = nombre.getText();
        if (pNombre.matches(".*\\d.*")){
            JOptionPane.showMessageDialog(this, "El nombre no debe haber numeros");
            return;
        }
        
        String pCedula = cedula.getText();
        if (pCedula.matches("[0-9]+")){
        } else {
            JOptionPane.showMessageDialog(this, "La cedula no debe haber letras");
            return;
        }
        
        String pTelefono = telefono.getText();
        if (pTelefono.matches("[0-9]+")){
        } else {
            JOptionPane.showMessageDialog(this, "El numero de telefono no debe haber letras");
            return;
        }
        
        String pEmail = email.getText();
        if (!pEmail.contains("@")||!pEmail.contains(".com")){
            JOptionPane.showMessageDialog(this, "No es un correo valido");
            return;
        }
        
        
        String pDia = (String) Dia.getSelectedItem();
        String pMes = (String) Integer.toString(Mes.getSelectedIndex()+1);
        String pAnio = (String) Anio.getSelectedItem();
        
        
        String fecha= pAnio+ "/"+pMes+"/"+pDia;
        
        
        char genero;
        String pSexo = (String) sexo.getSelectedItem();
        if ("None".equals(pSexo)){
            JOptionPane.showMessageDialog(this, "Tiene que elegir el sexo");
            return;
        }
        if ("Hombre".equals(pSexo)){
            genero = 'M';
            gener = 'M';
        } else {
            genero = 'F';
            gener = 'F';
        }
        
        Paciente paciente = new Paciente();
        paciente.setNombre(pNombre);
        paciente.setCedula(pCedula);
        paciente.setTelefono(pTelefono);
        paciente.setSexo(genero);
        paciente.setEmail(pEmail);
        paciente.setFechadeNacimiento(pDia, pMes, pAnio);
        int anio = 2015 - Integer.valueOf(paciente.getAnioFechadeNacimiento());
        eda = anio;
        int cantPaciente = numeroPacientes-1;
        
        
        while(cantPaciente>=0){
            if (pacientes.get(cantPaciente).getCedula().equals(pCedula)){
                JOptionPane.showMessageDialog(this, "Este paciente ya existe");
                return;
            }
            cantPaciente--;
        }
        
        pacientes.add(numeroPacientes,paciente);
        numeroPacientes++;
        posPaciente=(numeroPacientes-1);
        
        /**
        Paciente paciente1 = new Paciente();
        paciente1.setNombre("Will");
        paciente1.setCedula("dsfdsf");
        paciente1.setEmail(null);
        paciente1.setSexo('M');
        paciente1.setTelefono(null);
        Paciente paciente2 = new Paciente();
        paciente2.setNombre("Edwin");
        paciente2.setCedula("3456");
        paciente2.setEmail(null);
        paciente2.setSexo('M');
        paciente2.setTelefono(null);
        Paciente paciente3 = new Paciente();
        paciente3.setNombre("Sha");
        paciente3.setCedula("1334");
        paciente3.setEmail(null);
        paciente3.setSexo('M');
        paciente3.setTelefono(null);
        pacientes.add(0,paciente1);
        pacientes.add(1,paciente2);
        pacientes.add(2,paciente3);
        **/
        /**PersistenciaDatos persistente = new PersistenciaDatos("trabajo");
        ListWrapper contenedor = new ListWrapper(pacientes);
        * **/
        String[][] elementos = new String[numeroPacientes][2];
        try {
            //persistente.guardar((Object)contenedor);
            //persistente.guardar((Object)"1");
            //ListWrapper NewPacientes = persistente.restaurarObjecto(ListWrapper.class);
            //String hola = persistente.restaurarObjecto(String.class);
            
            
            //List<Paciente> prueba = NewPacientes.getPacientes();
            for(int index = 0; index < pacientes.size(); index++)
            {
                elementos[index][0] = pacientes.get(index).getNombre();
                elementos[index][1] = pacientes.get(index).getCedula();
                
            }
            String[] columnasNombres = {"Pacientes", "Cedula"};
            
            
            NonEditableTableModel model = new NonEditableTableModel();
            model.setDataVector(elementos, columnasNombres);
            jTable1.setModel(model);
            
            
            
        } catch (Exception ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Paciente creado! Por favor agregar las medidas");
    }//GEN-LAST:event_crearActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        JTable miTabla = (JTable)evt.getSource();
        //int indexCol = miTabla.getSelectedColumn();
        int indexRow = miTabla.getSelectedRow();
        //String elemento = (String)miTabla.getValueAt(indexRow, indexCol);
        temp =pacientes.get(indexRow);
        posPaciente = indexRow;
        nombre.setText(temp.getNombre());
        cedula.setText(temp.getCedula());
        telefono.setText(temp.getTelefono());
        email.setText(temp.getEmail());
        int genero = 0;
        char tempo = temp.getSexo();
        if (tempo=='M'){
            gener = 'M';
            genero = 1;
        }
        if (tempo=='F'){
            gener = 'F';
            genero = 2;
        }
        sexo.setSelectedIndex(genero);
        int dia = Integer.valueOf(temp.getDiaFechadeNacimiento())-1;
        int mes = Integer.valueOf(temp.getMesFechadeNacimiento())-1;
        int anio = 2015 - Integer.valueOf(temp.getAnioFechadeNacimiento());
        eda = anio;
        Dia.setSelectedIndex(dia);
        Mes.setSelectedIndex(mes);
        Anio.setSelectedIndex(anio);
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void DiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiaActionPerformed

    private void cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        
    }//GEN-LAST:event_nombreActionPerformed

    private void MesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MesActionPerformed

    private void AnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnioActionPerformed

    private void sexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexoActionPerformed

    private void telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefonoActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling de here:
    }//GEN-LAST:event_emailActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        try{
        String pNombre=(String) nombre.getText();
        String pCedula=(String) cedula.getText();
        String pDia=(String) Dia.getSelectedItem();
        String pMes = (String) Integer.toString(Mes.getSelectedIndex()+1);
        String pAnio = (String) Anio.getSelectedItem();
        String pSexo=(String) sexo.getSelectedItem();
        String pTelefono=(String) telefono.getText();
        String pEmail=(String) email.getText();
        if ("None".equals(pSexo)){
            JOptionPane.showMessageDialog(this, "Tiene que elegir el sexo");
            return;
        }
        char genero;
        if ("Hombre".equals(pSexo)){
            genero = 'M';
        } else {
            genero = 'F';
        }
        temp.setNombre(pNombre);
        temp.setCedula(pCedula);
        temp.setTelefono(pTelefono);
        temp.setSexo(genero);
        temp.setEmail(pEmail);
        temp.setFechadeNacimiento(pDia, pMes, pAnio);
        }catch (Exception ex){
            JOptionPane.showMessageDialog(this, "No ha seleccionado a un paciente");
            return;
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        if (numeroPacientes==0){
            return;
        }
        pacientes.remove(posPaciente);
        numeroPacientes--;
        ListWrapper contenedor = new ListWrapper(pacientes);
        String[][] elementos = new String[ numeroPacientes][2];
        PersistenciaDatos persistente = new PersistenciaDatos("trabajo");
        try {
            persistente.guardar((Object)contenedor);
            //persistente.guardar((Object)"1");
            ListWrapper NewPacientes = persistente.restaurarObjecto(ListWrapper.class);
            String hola = persistente.restaurarObjecto(String.class);
            
            
            List<Paciente> prueba = NewPacientes.getPacientes();
            for(int index = 0; index < prueba.size(); index++)
            {
                elementos[index][0] = prueba.get(index).getNombre();
                elementos[index][1] = prueba.get(index).getCedula();
                
            }
            String[] columnasNombres = {"Pacientes", "Cedula"};
            
            
            NonEditableTableModel model = new NonEditableTableModel();
            model.setDataVector(elementos, columnasNombres);
            jTable1.setModel(model);
            
            
            
        } catch (Exception ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_borrarActionPerformed

    private void MedicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicionActionPerformed
        if (numeroPacientes==0){
            JOptionPane.showMessageDialog(this, "No hay pacientes");
            return;
        }
        MenuMedidas menuMedidas = new MenuMedidas();
        /**if (!pacientes.get(posPaciente).getMedida().isEmpty()){
            ArrayList<Medida> listMedida = pacientes.get(posPaciente).getMedida();
            Medida tempMedida = listMedida.get(0);
            
            menuMedidas.Estatura.setText(Double.toString(tempMedida.getEstatura()));
            menuMedidas.Peso.setText(Double.toString(tempMedida.getPeso()));
            menuMedidas.Triceps.setText(Double.toString(tempMedida.getTriceps()));
            menuMedidas.Subescapular.setText(Double.toString(tempMedida.getSubescapular()));
            menuMedidas.Abdomen.setText(Double.toString(tempMedida.getAbdomen()));
            menuMedidas.Iliaco.setText(Double.toString(tempMedida.getIliaco()));
            menuMedidas.Muslo.setText(Double.toString(tempMedida.getMuslo()));
            menuMedidas.Pantorrilla.setText(Double.toString(tempMedida.getPantorrilla()));
            menuMedidas.Pectoral.setText(Double.toString(tempMedida.getPectoral()));
            menuMedidas.Cuello.setText(Double.toString(tempMedida.getCuello()));
            menuMedidas.BicepDer.setText(Double.toString(tempMedida.getBicepDer()));
            menuMedidas.BicepIzq.setText(Double.toString(tempMedida.getBicepIzq()));
            menuMedidas.PectoralCircum.setText(Double.toString(tempMedida.getPectoralCircum()));
            menuMedidas.Espalda.setText(Double.toString(tempMedida.getEspalda()));
            menuMedidas.Cintura1.setText(Double.toString(tempMedida.getCintura1()));
            menuMedidas.Cintura2.setText(Double.toString(tempMedida.getCintura2()));
            menuMedidas.Cintura3.setText(Double.toString(tempMedida.getCintura3()));
            menuMedidas.Cadera.setText(Double.toString(tempMedida.getCadera()));
            menuMedidas.MusloDer.setText(Double.toString(tempMedida.getMusloDerecho()));
            menuMedidas.MusloIzq.setText(Double.toString(tempMedida.getMusloIzquierdo()));
            menuMedidas.PantorrillaDer.setText(Double.toString(tempMedida.getPantorrillaDerecha()));
            menuMedidas.PantorrillaIzq.setText(Double.toString(tempMedida.getPantorrillaIzquierda()));
            menuMedidas.FrecuenciaReposo.setText(Integer.toString(tempMedida.getFrecuenciaCardiacaReposo()));
            menuMedidas.PresionArtSist.setText(Double.toString(tempMedida.getPresionArterialSistolica()));
            menuMedidas.PresionArtDiast.setText(Double.toString(tempMedida.getPresionArterialDiastolica()));
            
            double porcGrasaCorp=tempMedida.calcPorcentajeGrasaCorporal(eda,gener);
            String porcGrasaCorpString = String.format("%.2f", porcGrasaCorp);
            menuMedidas.porcentajeGrasaCorp.setText(porcGrasaCorpString+"%");  

            double porcMasaMusc=tempMedida.calcPorcentajeMasaMuscular();
            String porcMasaMuscString=String.format("%.2f", porcMasaMusc);
            menuMedidas.MasaMusc.setText(porcMasaMuscString+"%");

            double cintura_cadera=tempMedida.calcRelacionCinturaCadera();
            String porcCintura_caderaString=String.format("%.5f",cintura_cadera);
            menuMedidas.CintCad.setText(porcCintura_caderaString);

            int frequenciaCard=tempMedida.calcFrecuenciaCard(eda);
            menuMedidas.FreqCard.setText(Integer.toString(frequenciaCard)+"/min");
            
            
        }**/
        menuMedidas.setVisible(true);
        
        
            
        
    }//GEN-LAST:event_MedicionActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        setVisible(false);
    }//GEN-LAST:event_SalirActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try
        {
            MenuProgramaEntrenamiento proEntrenamientoFrame = new MenuProgramaEntrenamiento(temp);
        
            proEntrenamientoFrame.setVisible(true);
        }
        catch(NullPointerException ex)
        {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        
        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws JAXBException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPaciente().setVisible(true);
            }
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Anio;
    private javax.swing.JComboBox Dia;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton Medicion;
    private javax.swing.JComboBox Mes;
    private javax.swing.JButton Salir;
    private javax.swing.JButton borrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cedula;
    private javax.swing.JButton crear;
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombre;
    private javax.swing.JComboBox sexo;
    private javax.swing.JTextField telefono;
    // End of variables declaration//GEN-END:variables
}
